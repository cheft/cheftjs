// Generated by CoffeeScript 1.9.2
(function() {
  var c, cheft, fn, i, idCounter, item, len, toString, types,
    slice = [].slice;

  c = cheft = {
    version: '0.1'
  };

  idCounter = 0;

  toString = Object.prototype.toString;

  types = ['Function', 'Object', 'String', 'Array', 'Number', 'Boolean', 'Date', 'RegExp', 'Undefined', 'Null'];

  fn = function(item) {
    return c["is" + item] = function(obj) {
      return toString.call(obj) === ("[object " + item + "]");
    };
  };
  for (i = 0, len = types.length; i < len; i++) {
    item = types[i];
    fn(item);
  }

  c.extend = function() {
    var j, key, len1, mixin, mixins, target, value;
    target = arguments[0], mixins = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    if (!target) {
      return target;
    }
    for (j = 0, len1 = mixins.length; j < len1; j++) {
      mixin = mixins[j];
      for (key in mixin) {
        value = mixin[key];
        target[key] = value;
      }
    }
    return target;
  };

  c.uniqueId = function(prefix) {
    return (prefix ? prefix : '') + ++idCounter;
  };

  c.flux = function(self, tag) {
    var a, fn1, results, s;
    fn1 = function(a) {
      return tag[a] = function(e) {
        return self.actions[a].call(self, e, tag);
      };
    };
    for (a in self.actions) {
      fn1(a);
    }
    results = [];
    for (s in self.stores) {
      results.push((function(s) {
        return tag[s] = self.stores[s];
      })(s));
    }
    return results;
  };

  window.c = c;

}).call(this);
