// Generated by CoffeeScript 1.9.1
var Store;

C.Store = Store = (function() {
  function Store(app, tag, options) {
    this.app = app;
    this.tag = tag;
    this.options = options;
    this.params = this.options.params || {};
    this.url = this.options.url;
    this.data = this.options.data || {};
  }

  Store.prototype.getParams = function() {
    return this.params;
  };

  Store.prototype.get = function(obj) {
    return this.ajax({
      type: 'GET',
      url: this.url
    }, obj, 'geted');
  };

  Store.prototype.post = function(obj) {
    return this.ajax({
      type: 'POST',
      url: this.url
    }, obj, 'posted');
  };

  Store.prototype.put = function(obj) {
    return this.ajax({
      type: 'PUT',
      url: this.url + '/' + obj.id
    }, obj, 'puted');
  };

  Store.prototype.del = function(obj) {
    return this.ajax({
      type: 'DELETE',
      url: this.url + '/' + obj.id
    }, obj, 'deleted');
  };

  Store.prototype.save = function(obj) {
    if (this.data.id) {
      return this.put(obj);
    } else {
      return this.post(obj);
    }
  };

  Store.prototype.ajax = function(params, obj, evt) {
    var p, self;
    if (obj == null) {
      obj = {};
    }
    self = this;
    params.url = this.app.urlRoot + params.url;
    params.data = obj;
    p = new C.Adapter.Promise();
    C.Adapter.ajax(params).done(function(resp) {
      self.set(resp);
      self.tag.trigger(evt, 'success', resp);
      if (evt === 'posted') {
        self.tag.trigger('saved', 'success', resp);
      }
      return p.resolve(resp);
    }).fail(function(resp) {
      self.tag.trigger(evt, 'error', resp);
      if (evt === 'posted') {
        self.tag.trigger('saved', 'error', resp);
      }
      return p.reject(resp);
    });
    return p.promise();
  };

  Store.prototype.set = function(d) {
    this.data = this.options.root ? d[this.options.root] : d;
    return this;
  };

  Store.prototype.clear = function(trigger) {
    this.data = {};
    return this;
  };

  return Store;

})();
